#include<vector>
vector<vector<int>> mergeOverlappingIntervals(vector<vector<int>> &arr) {
  // Write your code here.
  vector<vector<int>> ans;
  sort(arr.begin(), arr.end());

  for(int i=0; i<arr.size();i++)
  {
	  int start = arr[i][0];
	  int end = arr[i][1];
	  if(!ans.empty()&& ans.back()[1]>=end) //current end
	  {
		  continue; //skip that iteration for i and move to next iteration
	  }
	  for(int j=i+1; j<arr.size();j++)
	  {
		  if(arr[j][0]<=end)
		  {
			  end = max(end,arr[j][1]);
		  }
		  else
		  {
			  break;
		  }
	  }
	  ans.push_back({start,end});
  }
  return ans;
}



#include<vector>

vector<vector<int>> mergeOverlappingIntervals(vector<vector<int>> &arr) {
  // Write your code here.
  vector<vector<int>> ans;
  sort(arr.begin(), arr.end());
  for(int i=0; i<arr.size();i++)
  {
	  if(ans.empty() || arr[i][0]>ans.back()[1]) //new interval adding condition
	  {
		  ans.push_back(arr[i]);
	  }
	  else
	  {
		  ans.back()[1] = max(ans.back()[1],arr[i][1]);  //change the value of last element with current if current is greater.
	  }
  }
  return ans;
}
