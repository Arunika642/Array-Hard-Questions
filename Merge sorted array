Brute:

#include<vector>

void mergeTwoSortedArraysWithoutExtraSpace(vector<long long> &a, vector<long long> &b){
	// Write your code here.
	vector<long long> c;
	int n=a.size();
	int m=b.size();
	int left =0;  //pointing to first element of a
	int right = 0;  //pointint to first element of b
	int index =0; //for c's indexes;
	while(left<n && right<m)
	{
		if(a[left]<=b[right])
		{
			c[index]=a[left];
			left++;
			index++;
		}
		else{
			c[index]=b[right];
			right++;
			index++;
		}
	}
	while(left<n)
	{
		c[index]= a[left];
		index++;
		left++;
	}
	while(right<m)
	{
		c[index]= b[right];
		index++;
		right++;
	}

	for(int i=0; i<n+m;i++)
	{
		if(i<n) a[i]=c[i];
		else b[i-n]=c[i];

	}
	
}




Optimal 1 
#include<vector>
#include <algorithm>  
using namespace std;

void mergeTwoSortedArraysWithoutExtraSpace(vector<long long> &a, vector<long long> &b){
	// Write your code here.
	int n = a.size();
	int m = b.size();

	int left = n-1;
	int right = 0;
	while(left>=0 && right<m)
	{
		if(a[left]>b[right])
		{
			swap(a[left],b[right]);
			left--;
			right++;
		}
		else
		{
			break;
		}
	}
	sort(a.begin(),a.end());
	sort(b.begin(),b.end());
	
}
